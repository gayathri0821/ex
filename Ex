1. Consider user has N oranges. Then display the number of oranges
in gross (144 oranges make one gross) and number of oranges in
dozen (12 oranges make one dozen) and the number of oranges
that is left out. The total number of oranges can be got as input
through console. Write a java program to display how many gross,
how many dozen, and how many left over oranges the user has.
For example, if the input is 1342 oranges, then the program should
respond with:
Your number of oranges is 9 gross, 3 dozen, and 10.
Program:
public class Oranges {
	public static void main(String[] args) {
		java.util.Scanner in = new java.util.Scanner(System.in);// Scanner class
		System.out.print("Enter the number of oranges :");
		int oranges = in.nextInt();
		int gross=0,orange=0, dozen=0, temp = 0;// Initialize of variables
		if (oranges >= 144)  // Calculate the gross
		{
			gross = oranges / 144;
			temp = oranges % 144;
			if (temp >= 12)  // Calculate the dozens
			{
				dozen = temp / 12;
				orange = temp % 12;  // Calculate the remaining oranges and dividing in dozens
			}
			if (temp < 12)  // Calculate the remaining oranges
			{
				orange = temp;
			}
		}
		if (oranges < 144 && oranges >= 12)  // Calculate the dozens if given value is below 144 and above 12 
		{
			dozen = oranges / 12;
			orange = oranges % 12;  // Calculate the remaining oranges if given value is above 12
		}
		if (oranges < 12) 
		{
			orange = oranges;  // If the given oranges is below 12 the given value printed
		}
		System.out.println("Your number of oranges is " + gross + " Gross, " + dozen + " dozens, and " + orange);
		in.close();  // Closing Scanner class
	}
}
Output:
 

2. Write a java program to check whether the number is a prime number. If it is a prime number, display the number along with the alphabet ‘p’ appended to it.
Program:
public class Prime {
	public static void main(String[] args) {
		java.util.Scanner in = new java.util.Scanner(System.in); // Scanner class
		System.out.println("Input any Integer : ");
		int number = in.nextInt();  // Taking input from console
		int count=0; //Initializing count value to 0
		for (int i = 2; i <= number / 2; i++)   // for loop to check the number is prime or not
		{
			if(number%i==0)  // if the number is divided by any of the number it will enters into if condition
			{
				count++; // incremented the count value 
			}
		}
		if(count==0)  // if the number is not incremented it enters to  if statement
		{
			System.out.println(number+"p"); // printing the number is prime
		}
		else  // if count value is incremented 
		{
			System.out.println(number+" not prime");  // printing not prime
		}
		in.close();  // closing Scanner class
	}
}


Output:
 












3. Write a class in java accept the scholar name, id and marks of five subjects Physics, Chemistry, Biology, Mathematics and Computer. Calculate percentage and grade according to following:
 Percentage >= 90% : Grade A 
Percentage >= 80% : Grade B 
Percentage >= 70% : Grade C 
Percentage >= 60% : Grade D 
Percentage >= 40% : Grade E 
Percentage < 40% : Grade F


Program:
class Scholar {
	//Declaring Variables
	private String name;
	private String id;
	private int physics;
	private int chemistry;
	private int mathamatics;
	private int biology;
	private int computer;
	private double percentage;
	private char grade;
	
	public Scholar(String name, String id, int physics, int chemistry, int mathamatics, int biology, int computer) {
	super();    
	//Assigning given inputs to the variables using this key words 
	this.name = name;
	this.id = id;
	this.physics = physics;
	this.chemistry = chemistry;
	this.mathamatics = mathamatics;
	this.biology = biology;
	this.computer = computer;
	int totalMarks = physics + chemistry + mathamatics + biology + computer;  // Adding total marks
	this.percentage = (totalMarks / 5);  //calculating percentage
	this.grade = grade(percentage);  // Calling percentage method
	}
		//  All the variables are in private so getter setter methods are used for setting the values and getting the values
	public String getName() {
	return name;
	}

	public void setName(String name) {
	this.name = name;
	}

	public String getId() {
	return id;
	}

	public void setId(String id) {
	this.id = id;
	}

	public int getPhysics() {
	return physics;
	}

	public void setPhysics(int physics) {
	this.physics = physics;
	}

	public int getChemistry() {
	return chemistry;
	}

	public void setChemistry(int chemistry) {
	this.chemistry = chemistry;
	}

	public int getMathamatics() {
	return mathamatics;
	}

	public void setMathamatics(int mathamatics) {
	this.mathamatics = mathamatics;
	}

	public int getBiology() {
	return biology;
	}

	public void setBiology(int biology) {
	this.biology = biology;
	}

	public int getComputer() {
	return computer;
	}

	public void setComputer(int computer) {
	this.computer = computer;
	}

	public double getPercentage() {
	return percentage;
	}

	public void setPercentage(double percentage) {
	this.percentage = percentage;
	}

	public char getGrade() {
	return grade;
	}

	public void setGrade(char grade) {
	this.grade = grade;
	}
		// Overriding to string method without this method only object values will print
	@Override
	public String toString() {
	return "Id : " + id + ",  name : " + name + ",  Grade : " + grade ;
	}

	private char grade(double percentage) 
	{
	if (percentage >= 90) 
	{
		return 'A';
	}
	if (percentage >= 80) 
	{
		return 'B';
	}
	if (percentage >= 70) 
	{
		return 'C';
	}
	if (percentage >= 60) 
	{
		return 'D';
	}
	if (percentage >= 40) 
	{
		return 'E';
	} 
	return 'F';
	}
}
public class Grade 
{
	public static void main(String[] args) 
	{
		java.util.Scanner in = new java.util.Scanner(System.in);  // Scanner Class
		System.out.println("Enter scholar name");  
		String name = in.nextLine();  // Takes scholar name from console
		System.out.println("Enter scholar id");
		String id = in.nextLine();  // Takes scholar id from console 
		System.out.println("Enter marks of 5 Subjects");
		System.out.println("Enter maths marks of scholar");     
		int maths = in.nextInt();  	 //Takes maths marks
		System.out.println("Enter physics marks of scholar");
		int physics = in.nextInt();  //Takes physics marks
		System.out.println("Enter chemistry marks of scholar");
		int chemistry = in.nextInt();  // takes chemistry marks
		System.out.println("Enter biology marks of scholar");
		int biology = in.nextInt();  // takes biology marks
		System.out.println("Enter computer marks of scholar");
		int computer = in.nextInt();  // takes computer marks
		Scholar scholar = new Scholar(name, id, physics, chemistry, maths, biology, computer);  //passing given arguments to the constructor 
		System.out.println("[  "+scholar.toString() +"  ]");  
		in.close();
	}
}



Output:
 













4. Create an array of N strings and copy the strings to another array which are starting with alphabet 'S'. Finally print both the arrays.
Program:
public class StringToArray {
	public static void main(String[] args) {
		java.util.Scanner in = new java.util.Scanner(System.in);
		System.out.println("Enter the number of names");
		int number = in.nextInt(); // Takes number of names
		int count = 0;
		String[] names = new String[number];  //Declaring array size
		String[] copy = new String[number];  //Declaring array size 
		System.out.println("Enter there names:");
		for (int i = 0; i <number; i++) 
		{
			names[i] = in.next();  //Taking names from console and Assigning names to names array
		}
		for (int i = 0; i <number; i++) 
		{
			if ((names[i].charAt(0)) == 's' || (names[i].charAt(0)) == 'S')   // If the names Starting with 'S' or 's' it enters into if statement
			{
				copy[count] = names[i];  //copying that name to copy array 
				count++; //Incremented the count to know how many names are starting with S or s 
			}
		}
		System.out.println("Array 1 elements are"); 
		for (int i = 0; i < number; i++)  
		{
			System.out.println(names[i]);  // to print 1st array elements
		}
		System.out.println("Array 2 elements are");
		for (int i = 0; i < count; i++) 
		{
			System.out.println(copy[i]);  // to print copy array elements
		}
		in.close(); // closing Scanner class
	}
}

Output:
 


5. Find the intersection elements of two given arrays.
Program:
public class Intersection {
	@SuppressWarnings("static-access")
	public static void main(String[] args) {
		Intersection is=new Intersection(); //creating object
		is.inter(); // calling method
	}

	public static void inter() {
		java.util.Scanner in = new java.util.Scanner(System.in);  //scanner class
		System.out.println("Enter the size of arrays:");  
		int number = in.nextInt();  // taking number of array elements present in the array
		int[] first = new int[number];  // array initialization for first array
		int[] second = new int[number];  // array initialization for second array
		int[] interSection = new int[number];  // array initialization for intersection array
		int count = 0; 
		System.out.println("Enter 1st array elements");
		for (int i = 0; i < number; i++)  // Assigning 1st array elements 
		{
			 first[i] = in.nextInt(); //Storing the elements
		}
		System.out.println("Enter 2nd array elements");
		for (int j = 0; j < number; j++) // Assigning 2nd array elements 
		{
			second[j] = in.nextInt();  // storing the elements 
		}
		for (int i = 0; i < number ; i++) // for loop for intersection elements
		{
			for (int j = 0; j <= number - 1; j++)  // it will check one element of 1st array with all the elements in another array 
			{
				if (first[i] == second[j]) //condition for checking the element is equal or not
				{
					interSection[count] = first[i]; //if it is equal the element stored in intersection array 
					count++; 
				}
			}
		}
		System.out.println("Intersection array is : ");
		for (int k = 0; k < count; k++) //  printing the intersection elements
		{
			System.out.println(interSection[k]);  // printing elements
		}
		in.close();	//closing scanner class 
	}
}


Output:
 


6. Write a java program to implement selection sort.
Program:
public class SelectionSort 
{
	public static int[] selectionSort(int data[])
	{
		for(int i=0; i<=data.length-1;i++)  //for loop for comparing one element to another element
		{
			int index = i; // copying i value to index value
			for(int j= i+1; j<data.length;j++)  // for loop for comparing the element with another element
			if(data[j] < data[index])  // checking the element with another element if condition is true it enters into if statement
				index=j;  // changing the index value
			int smallerNumber = data[index]; //Swapping the numbers
			data[index] = data[i];
			data[i] = smallerNumber;
		}
		return data;  // returns the data 
	}
	
	private static void display(int[]data)  // Display method to print all the sorted numbers
	{
	System.out.println("After Selection Sort");
	for(int i : data)  // enhanced for loop for printing sorted elements
	{
			System.out.print(i+"  "); //prints the Sorting elements 
	}
	}
	
	public static void main(String[] args) 
	{
		java.util.Scanner in= new java.util.Scanner(System.in);  // Scanner class
		System.out.println("Enter the size of array");
		int size= in.nextInt();  //Taking Size of array
		System.out.println("Enter array elements");
		int[] data = new int[size];  // Initializing array
		for(int i=0;i<size;i++)  // Storing array elements
		{
			data[i]= in.nextInt();
		}
		int[] sortedData = selectionSort(data);  // calling Selection Sort method
		display(sortedData);  // calling display method 
		in.close();
	}
}


Output:

 






7. Write a program to remove duplicates from an array.
Program:
public class RemoveDuplicateElements 
	{
		public static void main(String[] args) {
		RemoveDuplicateElements rde = new RemoveDuplicateElements();
		rde.duplicate();
	}
		void duplicate() 
		{
			java.util.Scanner in = new java.util.Scanner(System.in);  // Scanner class
			int[] arr_elements = new int[20]; // Array instantiation
			int initial_element, next_element;
			System.out.print("Enter array size: ");
			int arr_size = in.nextInt();  //taking array size
			for (int i = 0; i < arr_size; ++i) // Loop to take array input elements
			{
				arr_elements[i] = in.nextInt();
			}
		System.out.println("Before removing duplicate element array are :");
		// Loop for displaying array elements 
		for (int i = 0; i < arr_size; ++i)   //for to print before removing duplicate elements
		{
			System.out.print(arr_elements[i]+"  "); 
		}
		System.out.println();
		System.out.println("After removing duplicate element array are :");
		for (initial_element = 0; initial_element < arr_size; ++initial_element)  // for loop for checking duplicate elements 
		{
			for (next_element = initial_element + 1; next_element < arr_size;)   
			{
				if (arr_elements[initial_element] == arr_elements[next_element]) // It will checks the array elements with another elements
				{
					for (int temp = next_element; temp < arr_size; ++temp)  
					{
						arr_elements[temp] = arr_elements[temp + 1];
					}
					arr_size = arr_size - 1;
				} else
					next_element++;
			}
		}

		
		for (int i = 0; i < arr_size; ++i) 
		{
			System.out.print(arr_elements[i]+"  ");  // Loop to display array after removing duplicate element 
		}
		in.close();
	}
}
Output:
 


8. Find the max and min value from a given array.
Program:

public class MaxAndMin {

	public static void main(String[] args) {
			  java.util.Scanner in = new java.util.Scanner(System.in);  // Scanner class
			  System.out.println("Enter the length of the array :");
			  int length = in.nextInt();  // takes array size
			  int [] array = new int[length];  // initializing array size
			  System.out.println("Enter the elements of the array:");
			  for(int i=0; i<length; i++ ) // reading array elements
			  {
		         array[i] = in.nextInt();
		      }
			  int max = getMax(array);  // calling max method
			  int min = getMin(array);  // calling min method
			  System.out.println("Max = " + max + " & " + "Min= " + min);  // printing maximum and minimum value
			  in.close(); // closing scanner class
	}
	public static int getMax(int[] inputArray)  // calculating maximum value method
	{
		int maxValue = inputArray[0];
		for (int i = 0; i < inputArray.length; i++) 
		{
			if (inputArray[i] > maxValue) // checking maximum value in the array
			{
				maxValue = inputArray[i];  // storing the maximum value
			}
		}
			return maxValue;  // returns the maximum value
		}

		public static int getMin(int[] inputArray) {  // minimum value method
			int minValue = inputArray[0];
			for (int i = 0; i < inputArray.length; i++) 
			{
				if (inputArray[i] < minValue)  // checking minimum value in the array 
				{
					minValue = inputArray[i];  // storing minimum value
				}
			}
			return minValue;  // returns minimum value
	}
}
Output:
 




9. 5 different marks are stored for a student in an array of size 10. Now, write code to insert a new assessment mark at an input position in the array and print the total marks before and after insert of the new mark.
Program:
public class Marks {
	public static void main(String[] args) {
		java.util.Scanner in = new java.util.Scanner(System.in); // Initializing Scanner
		System.out.println("Enter Array Length"); // Getting array length
		int size = in.nextInt();
		int[] first = new int[size]; // Initializing arrays
		int[] second = new int[size + 1];
		//int[] third = new int[size - 1];
		System.out.println("Enter array elements");
		for (int i = 0; i < size; i++) // Reading Elements in array
		{
			first[i] = in.nextInt();
		}
		System.out.println("Enter element to  be added:");
		int mark = in.nextInt();  //read the mark from console
		System.out.println("Enter position where element to be added:");
		int pos = in.nextInt();  // takes the where it add
		System.out.println("Before adding");
		System.out.print("[ ");
		for (int i : first)  // Printing inserted element data 
		{ 
			System.out.print(i + " ");
		}
		System.out.println("]");
		for (int i = 0; i < pos; i++) 
		{
			second[i] = first[i]; // Assigning values in array first to array second upto pos-position
		}
		second[pos - 1] = mark; // Assigning element to the given position

		for (int i = pos; i < size + 1; i++) {
			second[i] = first[i - 1];
		}
		System.out.println("After adding:");
		System.out.print("[ ");
		for (int i : second)  // Printing inserted element data 
		{ 
			System.out.print(i + " ");
		}
		System.out.println("]");
		in.close();
	}
}

Output:
 


10. Create two arrays of integers and check whether the arrays are equal or not.
Program:
public class ArrayEqual {
	public static void main(String[] args) {
		System.out.println("Enter the Array1 values");
	       java.util.Scanner in= new java.util.Scanner(System.in);
	       int array1=in.nextInt();
	       int Arr1[]= new int [array1];
	       System.out.println("Enter the Array2 values");
	       java.util.Scanner in2= new java.util.Scanner(System.in);
	       int array2=in2.nextInt();
	       int Arr2[]= new int[array2];
	       if( java.util.Arrays.equals(Arr1, Arr2))
	       {
	    	   System.out.println("equals"); 
	       }
	       else
	       {
	    	   System.out.println("not equals");
	       }
	       in.close();
	       in2.close();
	}
}



Output:
 


11. Write a program to compute Crazy Factorial of a number 
Crazy Factorial of 6 would be 6 X- 5 x 4 x -3 x 2 x -1  
Crazy Factorial of 5 would be 5 x -4 x 3 x -2 x 1
Program:
public class Factorial{  
	public static void main(String args[]){  
		java.util.Scanner in = new java.util.Scanner(System.in);  // Scanner class
		int fact1=1;
		int fact2=1;
		int fact3=1;
		int fact4=1;
		int number1=in.nextInt();//taking number to calculate factorial  
		int number2=in.nextInt();
		int number3=in.nextInt();
		int number4=in.nextInt();
		for(int i=1;i<=number1;i++){    
			fact1=fact1*i;    
		}
		for(int i=1;i<=number2;i++){    
			fact2=fact2*i;    
		}
		for(int i=1;i<=number3;i++){    
			fact3=fact3*i;    
		}
		for(int i=1;i<=number4;i++){    
			fact4=fact4*i;    
		}
		System.out.println("Factorial of "+number1+" is: "+fact1);
		System.out.println("Factorial of "+number2+" is: "+fact2);
		System.out.println("Factorial of "+number3+" is: "+fact3);
		System.out.println("Factorial of "+number4+" is: "+fact4);
		in.close();
	}  
}  






12. Write a program to check whether a triangle is valid or not, when the three angles of the triangle are as below. A triangle is  valid if the sum of all the three angles is equal to 180 degrees
Program:
public class Triangle {

	public static void main(String[] args) {
		java.util.Scanner in = new java.util.Scanner(System.in);
		int sides = 3;
		int sum = 0;
		int arr[] = new int[sides];
		System.out.println("Enter 3 angles :");//taking values from console
		for (int i = 0; i < sides; i++) {
			arr[i] = in.nextInt();

		}
		for (int j : arr) // adding the array values
		{
			sum = sum + j;
		}
		if (sum == 180) 
		{  
			System.out.println("Triangle");
		} 
		else 
		{
			System.out.println("not a Triangle");
		}
		in.close();
	}
}



Output1:
 
Output2:
 








